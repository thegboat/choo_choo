$LOAD_PATH.unshift File.expand_path('../../lib', __FILE__)
require 'choo_choo'
require 'benchmark'
require 'pry'
require 'pry-byebug'


module ChooChoo
  def self.test_string
    @test_string ||= %{
ISA*00*          *00*          *00*000000000000000*00*000000000000000*000000*0000*^*00501*000000000*0*C*:~GS*00*00000*00000*00000000*0000*000*X*005010X221A1~ST*835*000000000~BPR*H*0*C*NON************20120929~TRN*1*9861227191509 20120928 0052347*1060303370*62308~REF*EV*133052274~REF*F2*1~DTM*405*20120929~N1*PR*CONNECTICUT GENERAL LIFE INSURANCE COMPANY~N3*53 GLENMAURA NATIONAL BLVD~N4*MOOSIC*PA*18507~REF*2U*62308~PER*BL*HP*EM*Claims.Intake.App.Support@hp.com~PER*IC**UR*www.cignaforhcp.com~N1*PE*COMPASS HLTH SYS PA*XX*1619965795~N3*1065 NE 125TH ST # 409~N4*NORTH MIAMI*FL*331615834~REF*TJ*650199979~LX*1~CLP*50608710*1*269.77*0*157.65*13*9861227191509*11*1~NM1*QC*1*PETERSON*MAXIM*J***MI*U4115426101~NM1*74*1*PETTERSEN*MAXIM*J***C*U4115426101~NM1*82*1*VASQUEZ*VICTOR***DO*XX*1154408268~REF*1L*4700050~REF*CE*INDIVIDUAL OR CONVERSION OPEN ACCESS PLUS~DTM*050*20120927~DTM*232*20120917~DTM*233*20120917~PER*CX*MEMBER SERVICES*TE*8002446224~SVC*HC<90801*269.77*0****1~CAS*CO*45*112.12~CAS*PR*1*157.65~REF*6R*50608710-1~AMT*B6*157.65~SE*00*000000000~GE*0*00~IEA*0*000000000~
  }
end

  def self.test_string2
    @test_string2 ||= "ISA*00*          *00*          *ZZ*133052274      *ZZ*264007676      *130415*0246*^*00501*000118103*0*P*<~GS*HP*133052274*264007676*20130415*0246*1*X*005010X221A1~ST*835*0059~BPR*I*551.59*C*ACH*CCP*01*011900445*DA*0000009046*1066033492**01*111000614*DA*238721164365*20130419~TRN*1*813105550002225*1066033492*60054~REF*EV*133052274~DTM*405*20130415~N1*PR*AETNA~N3*151 FARMINGTON AVENUE~N4*HARTFORD*CT*06156~REF*2U*60054~PER*BL*Provider Service~N1*PE*CONTEMPORARY OB/GYN OF GRAPEVINE*XX*1962408062~N3*1600 W COLLEGE ST STE 340~N4*GRAPEVINE*TX*760513577~REF*PQ*788692840~REF*TJ*752710490~LX*1~TS3*1962408062*11*20131231*5*1340~CLP*83238113*1*125*49.77*25*13*EAJK6NHT30000*11*1~NM1*QC*1*ALLISON LUMPKIN*JULIA*M~NM1*IL*1*LUMPKIN*RUSSELL****MI*821189992~NM1*74*1***L**JR*C*W173066921~NM1*82*1*NEW*TROY*G***XX*1962408062~REF*1L*0326475-010-00190-AA~REF*CE*Aetna Choice  POS II NET 00338~DTM*232*20130405~DTM*233*20130405~DTM*050*20130408~PER*CX**TE*8886323862~AMT*AU*125~SVC*HC<99213*125*49.77**1~DTM*472*20130405~CAS*CO*45*50.23~CAS*PR*3*25~REF*6R*83238113-1~AMT*B6*74.77~CLP*96385257*1*175*104.25**13*EJAA6M14Q0000*11*1~NM1*QC*1*DEVINE*JILLIAN****MI*W181960503~NM1*82*1*NEW*TROY*G***XX*1962408062~REF*1L*0878752-036-00014-GB~REF*CE*Aetna Choice  POS II NET 03859~DTM*232*20130404~DTM*233*20130404~DTM*050*20130405~PER*CX**TE*8886323862~AMT*AU*175~SVC*HC<99395*175*104.25**1~DTM*472*20130404~CAS*CO*45*70.75~REF*6R*96385257-1~AMT*B6*104.25~CLP*43691534*1*575*152.09**13*EJFA6M2C30000*21*1~NM1*QC*1*LE*DUYEN~NM1*IL*1*NGUYEN*DZUNG****MI*W188654143~NM1*82*1*NEW*TROY*G***XX*1962408062~REF*1L*0878752-034-00023-ED~REF*CE*Aetna HealthFund  Aetna Choice  POS II NET 03859~DTM*232*20130404~DTM*233*20130404~DTM*050*20130405~PER*CX**TE*8886323862~AMT*AU*575~SVC*HC<59514<80*575*152.09**1~DTM*472*20130404~CAS*CO*45*422.91~REF*6R*43691534-1~AMT*B6*152.09~CLP*78288305*1*215*119.34**13*EXAA52M880000*11*1~NM1*QC*1*OSCAR*LINDA~NM1*IL*1*CLEMONS*CHRISTOPHER****MI*W104545356~NM1*74*1*CLEMENT**J~NM1*82*1*NEW*TROY*G***XX*1962408062~REF*1L*0724616-015-00001-UA~REF*CE*Aetna Choice  POS II NET 00338~DTM*232*20130403~DTM*233*20130403~DTM*050*20130404~PER*CX**TE*8886323862~AMT*AU*215~SVC*HC<99385*215*119.34**1~DTM*472*20130403~CAS*CO*45*95.66~REF*6R*78288305-1~AMT*B6*119.34~CLP*94471570*1*250*126.14**13*E8YZ55T640000*11*1~NM1*QC*1*CHOI*JIHEE****MI*W111098904~NM1*82*1*NEW*TROY*G***XX*1962408062~REF*1L*0878752-034-00012-EB~REF*CE*Aetna HealthFund  Aetna Choice  POS II NET 03859~DTM*232*20130408~DTM*233*20130408~DTM*050*20130409~PER*CX**TE*8886323862~AMT*AU*250~SVC*HC<99396*200*113.83**1~DTM*472*20130408~CAS*CO*45*86.17~REF*6R*94471570-1~AMT*B6*113.83~SVC*HC<82274*30*12.31**1~DTM*472*20130408~CAS*CO*45*17.69~REF*6R*94471570-3~AMT*B6*12.31~SVC*HC<99396*20*0***HC<81002*1~DTM*472*20130408~CAS*CO*97*20*1~REF*6R*94471570-2~LQ*HE*N19~SE*00*000000000~GE*0*00~IEA*0*000000000~"
  end

  def self.benchmark(times)
    time = Benchmark.realtime do
      EDI835::Parser.parse(test_string*times)
    end

    puts "#{time*1000} ms"
  end

  def self.to_hash
    edi = EDI835::Parser.parse(ChooChoo.test_string)
    isa = edi.isa_segment
    isa.to_hash
  end

  def self.isa
    edi = EDI835::Parser.parse(test_string)
    edi.isa_segment
  end

  def self.children(*names)
    edi = EDI835::Parser.parse(ChooChoo.test_string)
    isa = edi.isa_segment
    isa.children(*names)
  end

  def self.descendants(*names)
    edi = EDI835::Parser.parse(ChooChoo.test_string)
    isa = edi.isa_segment
    isa.descendants(*names)
  end
end

def file_loc(name)
  "./spec/support/#{name}"
end

def read_file(name)
  File.read(file_loc(name))
end

def edit_835_line(message, line, string)
  array = message.split('~')
  array[line -1] = string
  edi = EDI835::Parser.parse(array.join('~'))
  edi.isa_segment
end

